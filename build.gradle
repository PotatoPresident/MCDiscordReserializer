/*
 * MCDiscordReserializer: A library for transcoding between Minecraft and Discord.
 * Copyright (C) 2018-2020 Vankka
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'io.franzbecker.gradle-lombok' version '3.2.0'
    id 'java'
    id 'idea'
    id 'checkstyle'
    id 'maven-publish'
}

group 'dev.vankka'
version '3.0.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://nexus.vankka.dev/repository/maven-public/' }
}

javadoc {
    options.memberLevel = JavadocMemberLevel.PUBLIC
    options.author()
    options.encoding = 'UTF-8'
    options.addBooleanOption('html5', true)
    options.addBooleanOption('Xdoclint:none', true)
    failOnError = false
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

lombok {
    version = '1.18.10'
    sha256 = ''
}

checkstyle {
    configFile = rootProject.file('checkstyle.xml')
}
checkstyleMain {
    source = sourceSets.main.allJava
}
checkstyleTest {
    source = sourceSets.test.allJava
}

test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
    ignoreFailures = true
    subprojects.each { dependsOn(it.path + ':test') }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'net.kyori', name: 'text-api', version: '3.0.2'
    implementation group: 'dev.vankka', name: 'SimpleAST', version: '2.2.1'
}

jar {
    finalizedBy shadowJar
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    classifier 'shaded'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact shadowJar
            artifact sourcesJar
            artifact javadocJar
        }
    }

    repositories {
        maven {
            credentials {
                username System.getenv('NEXUS_USERNAME')
                password System.getenv('NEXUS_PASSWORD')
            }
            url version.endsWith('-SNAPSHOT') ? 'https://nexus.vankka.dev/repository/maven-snapshots/' : 'https://nexus.vankka.dev/repository/maven-releases/'
        }
    }
}
